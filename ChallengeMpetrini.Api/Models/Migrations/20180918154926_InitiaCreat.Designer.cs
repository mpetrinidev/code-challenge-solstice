// <auto-generated />
using System;
using ChallengeMpetrini.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChallengeMpetrini.Api.Models.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20180918154926_InitiaCreat")]
    partial class InitiaCreat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChallengeMpetrini.Api.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("State_Id");

                    b.HasKey("Id");

                    b.HasIndex("State_Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ChallengeMpetrini.Api.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("Birthdate");

                    b.Property<int>("City_Id");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Home_Phone_Number")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Mobile_Phone_Number")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Profile_Image")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Work_Phone_Number")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("City_Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ChallengeMpetrini.Api.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("ChallengeMpetrini.Api.Models.City", b =>
                {
                    b.HasOne("ChallengeMpetrini.Api.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("State_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ChallengeMpetrini.Api.Models.Contact", b =>
                {
                    b.HasOne("ChallengeMpetrini.Api.Models.City", "City")
                        .WithMany("Contacts")
                        .HasForeignKey("City_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
